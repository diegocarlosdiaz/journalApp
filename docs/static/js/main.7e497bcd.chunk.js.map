{"version":3,"sources":["firebase/config.js","types/index.js","actions/ui.js","errors/index.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","actions/notes.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/index.js","reducers/authReducer.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","googleAuthProvider","GoogleAuthProvider","types","setError","error","type","payload","finishLoading","errors","code","msg","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","getAuth","then","user","login","uid","displayName","catch","console","message","elemento","logout","useForm","initialState","useState","state","setState","reset","newState","handleInputChange","target","name","value","LoginScreen","useDispatch","useSelector","ui","loading","msgError","formValues","className","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","a","log","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","path","element","activeNote","id","note","setNotes","notes","saveNote","getState","auth","noteToFirestore","updateDoc","doc","updateNotes","deleteNote","JournalEntry","title","body","date","url","noteDate","moment","style","backgroundSize","backgroundImage","format","charAt","toUpperCase","slice","JournalEntries","map","key","Sidebar","signOut","newNote","Date","getTime","addDoc","collection","NotesAppBar","active","hidden","file","files","formData","FormData","append","Swal","fire","text","allowOutsideClick","didOpen","showLoading","fetch","method","response","json","result","secure_url","close","uploadFile","htmlFor","NoteScreen","activeId","useRef","useEffect","current","deleteDoc","NothingSelected","JournalScreen","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","getDocs","forEach","push","data","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e497bcd.chunk.js","sourcesContent":["//Código copiado de firebase, creación de app web\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { GoogleAuthProvider } from \"firebase/auth\";\r\n\r\n\r\n// Configuración de Firebase\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCgUYiW78AEisImUIwq2R-CQO1zEhIxfAk\",\r\n    authDomain: \"intensivo-react-2022-ccca5.firebaseapp.com\",\r\n    projectId: \"intensivo-react-2022-ccca5\",\r\n    storageBucket: \"intensivo-react-2022-ccca5.appspot.com\",\r\n    messagingSenderId: \"497232842522\",\r\n    appId: \"1:497232842522:web:a43cc564c0e552a247e6a3\"\r\n};\r\n\r\n// Inicializacón de Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n//Configuración de Firestore\r\nconst db = getFirestore(app);\r\n\r\n// Configuración de la autenticación de Google\r\nconst googleAuthProvider = new GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider\r\n}","export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n\r\n    noteAddNew: '[Notes] New note',\r\n    noteActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    noteUpdate: '[Notes] Update note',\r\n    noteFileUrl: '[Notes] Updated image url',\r\n    noteDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout cleaning'\r\n}","import { types } from \"../types\";\r\n\r\nexport const setError = (error) => ({\r\n    type: types.uiSetError,\r\n    payload: error\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n});","export const errors = [\r\n    {\r\n        code: 'auth/email-already-exists',\r\n        msg: 'El email ya se encuentra registrado.'\r\n    },\r\n    {\r\n        code : 'auth/invalid-email',\r\n        msg : \"El email no es válido.\"\r\n    },\r\n    {\r\n        code : 'Firebase: Error (auth/wrong-password).',\r\n        msg : \"La contraseña es incorrecta.\"\r\n    },\r\n    {\r\n        code : 'Firebase: Error (auth/user-not-found).',\r\n        msg : \"Credenciales inválidas\"\r\n    },\r\n    {\r\n        code : 'Firebase: Access to this account has been temporarily disabled due to many failed login attempts. You can immediately restore it by resetting your password or you can try again later. (auth/too-many-requests).',\r\n        msg : \"Debido a reiterados intentos fallidos, su cuenta fue inhabilitada temporalmente. Intente más tarde\"\r\n    }\r\n]","import { signInWithPopup, getAuth, createUserWithEmailAndPassword, updateProfile, signInWithEmailAndPassword, signOut } from \"firebase/auth\";\r\nimport { googleAuthProvider } from \"../firebase/config\";\r\nimport { types } from \"../types\";\r\nimport { finishLoading, setError, startLoading } from \"./ui\";\r\nimport { errors } from '../errors';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        dispatch(startLoading())\r\n\r\n        signInWithEmailAndPassword(getAuth(), email, password)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName))\r\n                dispatch(finishLoading())\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n                dispatch(finishLoading());\r\n\r\n                for (const elemento of errors) {\r\n                    elemento.code === error.message && dispatch(setError(elemento.msg))\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n//leer documentacion getAuth()\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n//Como no usamos el name del formulario hacemos un async await para actualizar los datos enviados a firebase y enviarle el name, \r\n//primero enviamos el usuario y despues actualizamos en un objeto la propiedad displayName\r\n    return (dispatch) => {\r\n        createUserWithEmailAndPassword(getAuth(), email, password)\r\n            .then( async ({ user }) => {\r\n                console.log(user);\r\n                \r\n                await updateProfile(user, {\r\n                    displayName: name\r\n                })\r\n                dispatch(login(user.uid, user.displayName))\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n}\r\n\r\n//action que se dispara en loginscreen\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        signInWithPopup(getAuth(), googleAuthProvider)\r\n            .then(({ user }) => {\r\n                //console.log(userCredential);\r\n                // nos trae las credenciales del usuario (todo)\r\n                dispatch(login(user.uid, user.displayName))\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n})\r\n\r\nexport const startLogout = () => {\r\n\r\n    return (dispatch) => {\r\n        signOut(getAuth())\r\n            .then( () => {\r\n                dispatch(logout())\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n}\r\n\r\nexport const logout = () => ({type: types.logout})\r\n\r\n/* \r\nexport const login = (uid, displayName) => ({\r\n    type: type.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n}) //con parentesis se aplica un return implícito\r\n\r\nexport const login = (uid, displayName) => {\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n*/","import { useState } from \"react\";\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    \r\n    const [state, setState] = useState(initialState);\r\n\r\n    const reset = (newState = initialState) => {\r\n        setState(newState)\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n\r\n        setState({\r\n            ...state,\r\n            [target.name] : target.value,\r\n        })\r\n    }\r\n    \r\n    return [state, handleInputChange, reset]\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, msgError } = useSelector(state => state.ui)\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: 'prueba@gmail.com',\r\n        password: '123123'\r\n    })\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        //dispatch(login(123123), 'Pececito')\r\n\r\n        dispatch(startLoginEmailPassword(email, password))\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Iniciar sesión</h3>\r\n\r\n            <form onSubmit={handleLogin}>\r\n\r\n                {\r\n                    msgError &&\r\n                    <div className='auth__alert-error'>\r\n                        {msgError}\r\n                    </div>\r\n                }\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={loading}\r\n                >\r\n                    Ingresar\r\n                </button>\r\n\r\n                \r\n                <div className=\"auth__social-networks\">\r\n                    <p>Ingresá con tu red social</p>\r\n\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Iniciá sesioń con google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"/Journal-AppReact/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Creá tu cuenta    \r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { msgError } = useSelector(state => state.ui)\r\n    //console.log(msgError);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: 'Pececito',\r\n        email: 'prueba@gmail.com',\r\n        password: '123123',\r\n        password2: '123123'\r\n    })\r\n\r\n    const {name, email, password, password2} = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n        // console.log(name, email, password, password2);\r\n        if(isFormValid()) {\r\n            //console.log('Formulario correcto');\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        switch (true) {\r\n            case name.trim().length === 0:\r\n                dispatch(setError('Nombre requerido'))\r\n                return false;\r\n            case !validator.isEmail(email):\r\n                dispatch(setError('Email inválido'))\r\n                return false;\r\n            case password.length < 6:\r\n                dispatch(setError('La contraseña debe tener mínimo 6 caracteres'))\r\n                return false;\r\n            case password !== password2:\r\n                dispatch(setError('Las contraseñas no coinciden'))\r\n                return false;\r\n        \r\n            default:\r\n                dispatch(removeError())\r\n                return true;\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Registro</h3>\r\n            \r\n\r\n            <form onSubmit={handleRegister}>\r\n\r\n                {\r\n                    msgError &&\r\n                    <div className='auth__alert-error'>\r\n                        {msgError}\r\n                    </div>\r\n                }\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Registrar\r\n                </button>\r\n\r\n\r\n\r\n                <Link \r\n                    to=\"/Journal-AppReact/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    ¿Estás registrado/a?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Routes>\r\n                    <Route \r\n                        path=\"/login\"\r\n                        element={ <LoginScreen/> }\r\n                    />\r\n\r\n                    <Route \r\n                        path=\"/register\"\r\n                        element={ <RegisterScreen/> }\r\n                    />\r\n\r\n                </Routes>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { addDoc, collection, deleteDoc, doc, getDocs, updateDoc } from 'firebase/firestore';\r\nimport Swal from 'sweetalert2';\r\nimport { db } from '../firebase/config';\r\nimport { types } from '../types';\r\n\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.noteActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n\r\n})\r\n\r\nexport const startNewNotes = () => {\r\n    \r\n    return async (dispatch, getState) => {\r\n\r\n        try {\r\n            const {uid} = getState().auth;\r\n\r\n            const newNote = {\r\n                title: '',\r\n                body: '',\r\n                date: new Date().getTime()\r\n            }\r\n        \r\n        \r\n            const doc = await addDoc(collection(db, `${uid}/journal/notes`), newNote)\r\n            // console.log(doc.id);\r\n            dispatch(activeNote(doc.id, newNote))\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const addNewNote = (note) => ({\r\n    type: types.noteAddNew,\r\n    payload: note\r\n})\r\n\r\nexport const loadNotes = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        try {\r\n            const { uid } = getState().auth;\r\n            const notes = [];\r\n    \r\n            //pedido de todas las notas a la db de firestone\r\n            let query = await getDocs(collection(db, `${uid}/journal/notes`));\r\n    \r\n            // console.log(query)\r\n            query.forEach(doc => {\r\n                // console.log(doc.data());\r\n                notes.push({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                })\r\n            })\r\n\r\n            dispatch(setNotes(notes))\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\nexport const saveNote = (note) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const {uid} = getState().auth;\r\n\r\n        const noteToFirestore = {...note};\r\n        //eliminamos un dato que no queremos del objeto\r\n        delete noteToFirestore.id;\r\n        // console.log(noteToFirestore);\r\n\r\n        try {\r\n\r\n            await updateDoc(doc(db, `${uid}/journal/notes`, note.id), noteToFirestore);\r\n\r\n            dispatch(updateNotes(note.id, note));\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const updateNotes = (id, note) => ({\r\n    type: types.noteUpdate,\r\n    payload: {\r\n        id,\r\n        note\r\n    }\r\n})\r\n\r\nexport const startDeleteNote = (id) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const {uid} = getState().auth;\r\n\r\n        try {\r\n\r\n            await deleteDoc(doc(db, `${uid}/journal/notes`, id))\r\n            // console.log('Se eliminó???');\r\n            dispatch(deleteNote(id))\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.noteDelete,\r\n    payload: id\r\n})\r\n\r\nexport const uploadFile = (file) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { active } = getState().notes;\r\n        const cloudURL = 'https://api.cloudinary.com/v1_1/rodriiborges/upload';\r\n\r\n        const formData = new FormData();\r\n\r\n        // console.log(formData);\r\n\r\n        formData.append('upload_preset', 'react-journal');\r\n        formData.append('file', file);\r\n\r\n        // console.log(formData.getAll('file'));\r\n\r\n        //Revisar documentación de sweet alert para carteles mas personalizados\r\n        Swal.fire({\r\n            title: 'Subiendo imagen...',\r\n            text: 'Por favor espere',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading()\r\n            }\r\n        });\r\n\r\n\r\n        try {\r\n            \r\n            const response = await fetch(cloudURL, {\r\n                method: 'POST',\r\n                body: formData\r\n            });\r\n\r\n            const result = await response.json();\r\n\r\n            // console.log(result);\r\n\r\n            active.url = result.secure_url;\r\n            \r\n            dispatch(saveNote(active))\r\n\r\n            Swal.close();\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}","import React from 'react';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({id, title, body, date, url}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const noteDate = moment(date);\r\n    // console.log(noteDate);\r\n\r\n    const handleNoteActive = () => {\r\n        dispatch(activeNote(id, {\r\n            title,\r\n            body,\r\n            date,\r\n            url\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div \r\n        className=\"journal__entry pointer\"\r\n        onClick={handleNoteActive}\r\n        >\r\n            \r\n            <div \r\n                className=\"journal__entry-picture\"\r\n                style={{\r\n                    backgroundSize: 'cover',\r\n                    backgroundImage:`url(${url})`\r\n                }}\r\n            ></div>\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd').charAt(0).toUpperCase() + noteDate.format('dddd').slice(1)}</span>\r\n                <h4>{noteDate.format('D')}</h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    // const entries = [1,2,3,4,5 ];\r\n\r\n    const { notes } = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            \r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                    key={ note.id }\r\n                    {...note}\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\nimport { startNewNotes } from '../../actions/notes'\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {name} = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    const handleNewNote = () => {\r\n        dispatch(startNewNotes())\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            \r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span>   {name}</span>\r\n                </h3>\r\n\r\n                <button \r\n                className=\"btn\"\r\n                onClick={handleLogout}\r\n                >\r\n                    Salir\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n            className=\"journal__new-entry\"\r\n            onClick={handleNewNote}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    Nueva nota\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />    \r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addNewNote, saveNote, uploadFile } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    const handleSave = () => {\r\n        dispatch(saveNote(active));\r\n        //disparamos agregar nueva nota para que se actualice el sidebar con las notas después de guardar\r\n        dispatch(addNewNote(active));\r\n    }\r\n\r\n    const handleFileChange = ({target}) => {\r\n        // console.log(target.files);\r\n        const file = target.files[0];\r\n        file && dispatch(uploadFile(file))\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>9 de febrero 2022</span>\r\n\r\n                <input \r\n                type=\"file\"\r\n                hidden\r\n                onChange={handleFileChange}\r\n                id=\"fileSelector\"\r\n                name=\"file\"\r\n                />\r\n\r\n            <div>\r\n                <label\r\n                className=\"btn\"\r\n                htmlFor='fileSelector'\r\n                >\r\n                    Subir imagen\r\n                </label>\r\n                <button \r\n                className=\"btn\"\r\n                onClick={handleSave}\r\n                >\r\n                    Guardar\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activeNote, startDeleteNote } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar';\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active: note} = useSelector(state => state.notes);\r\n    // console.log(note);\r\n\r\n    const activeId = useRef(note.id);\r\n\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n\r\n    const {title, body} = formValues;\r\n\r\n    //Cuando la nota activa cambia resetea los datos del journal y setea la nota activa\r\n    useEffect(() => {\r\n\r\n        if(note.id !== activeId.current) {\r\n            reset(note)\r\n            activeId.current = note.id\r\n        }\r\n\r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(activeNote(note.id, {...formValues}))\r\n\r\n    }, [formValues, dispatch, note.id]);\r\n    \r\n    const handleDelete = () => {\r\n        dispatch(startDeleteNote(note.id))\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    name='title'\r\n                    placeholder=\"Escribe el título\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    name='body'\r\n                    placeholder=\"¿Qué pasó hoy?\"\r\n                    className=\"notes__textarea\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n                {\r\n                    note.url && \r\n                    <div className=\"notes__image\">\r\n                        <img \r\n                            src={note.url}\r\n                            alt={note.id}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n\r\n                <button\r\n                className=\"btn buttons__btn-danger mt-5 pointer\"\r\n                onClick={handleDelete}\r\n                >\r\n                    Delete\r\n                </button>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Selecciona algo\r\n                <br />\r\n                para crear una nota!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Sidebar } from './Sidebar';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { useSelector } from 'react-redux';\r\nimport { NothingSelected } from './NothingSelected';\r\n\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__main-content\">\r\n            \r\n            <Sidebar />\r\n\r\n\r\n            <main>\r\n                {\r\n                    active\r\n                    ?\r\n                    <NoteScreen />\r\n                    :\r\n                    <NothingSelected />\r\n                }\r\n\r\n            </main>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter,\r\n    Navigate,\r\n    Route,\r\n    Routes,\r\n} from 'react-router-dom';\r\n\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { loadNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true)\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n        onAuthStateChanged(getAuth(), user => {\r\n            //console.log(user)\r\n            if(user?.uid) {\r\n                dispatch(login(user.uid, user.displayName))\r\n                setIsLoggedIn(true);\r\n\r\n                dispatch(loadNotes())\r\n\r\n            } else {\r\n                setIsLoggedIn(false)\r\n            }\r\n\r\n            setChecking(false)\r\n        })\r\n        \r\n    }, [dispatch]);\r\n\r\n    if(checking) {\r\n        return (\r\n            <div className=\"auth__main\">\r\n                <div className=\"sk-fading-circle\">\r\n                    <div className=\"sk-circle1 sk-circle\"></div>\r\n                    <div className=\"sk-circle2 sk-circle\"></div>\r\n                    <div className=\"sk-circle3 sk-circle\"></div>\r\n                    <div className=\"sk-circle4 sk-circle\"></div>\r\n                    <div className=\"sk-circle5 sk-circle\"></div>\r\n                    <div className=\"sk-circle6 sk-circle\"></div>\r\n                    <div className=\"sk-circle7 sk-circle\"></div>\r\n                    <div className=\"sk-circle8 sk-circle\"></div>\r\n                    <div className=\"sk-circle9 sk-circle\"></div>\r\n                    <div className=\"sk-circle10 sk-circle\"></div>\r\n                    <div className=\"sk-circle11 sk-circle\"></div>\r\n                    <div className=\"sk-circle12 sk-circle\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div>\r\n                <Routes>\r\n                    <Route \r\n                        path=\"/Journal-AppReact/auth/*\"\r\n                        element={ \r\n                        !isLoggedIn \r\n                        ? \r\n                        <AuthRouter/> \r\n                        :\r\n                        <JournalScreen/>\r\n                        }\r\n                    />\r\n\r\n                    <Route \r\n                        path=\"/Journal-AppReact/\"\r\n                        element={ \r\n                        isLoggedIn \r\n                        ?\r\n                        <JournalScreen/> \r\n                        :\r\n                        <div className=\"auth__main\">\r\n                            <div className=\"auth__box-container\">\r\n                                <LoginScreen/>\r\n                            </div>\r\n\r\n                        </div>\r\n                        }\r\n                    />\r\n                    <Route path='/' element={() => <Navigate to='/Journal-AppReact/'/>}/>\r\n\r\n                </Routes>\r\n            </div>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n","import { types } from \"../types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            \r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            \r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            \r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types\";\r\n\r\n//estado inicial que va a tener el listado de las notas\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.noteAddNew:\r\n\r\n            return {\r\n                ...state,\r\n                notes: [...state.notes, action.payload]\r\n            };\r\n        case types.noteActive:\r\n\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesLoad:\r\n\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        case types.noteUpdate:\r\n\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(note => note.id === action.payload.id ? action.payload.note : note)\r\n            }\r\n        case types.noteDelete:\r\n\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers, compose, applyMiddleware} from 'redux';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n//\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n//para poder utilizar varios middlewares en el store\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n// thunk = middleware para los pedidos asincronicos (firebase)","import { types } from \"../types\";\r\n\r\n// un Reducer recibe un estado y una accion\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            };\r\n\r\n        case types.logout:\r\n            return {};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store';\r\n\r\nexport const App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { App } from './App';\r\nimport './styles/styles.scss'\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}